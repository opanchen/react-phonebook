{"version":3,"file":"static/js/199.b080d8d9.chunk.js","mappings":"wPACA,EAA+B,+BAA/B,EAA4E,8BAA5E,EAAwH,8BAAxH,EAAgK,0BAAhK,EAAuM,6BAAvM,EAA+O,2BAA/O,EAAwR,8B,SCsHxR,EA7GiB,WACf,IAAAA,GAAwDC,EAAAA,EAAAA,KAAhDC,EAAYF,EAAZE,aAAcC,EAAuBH,EAAvBG,wBAAyBC,EAAIJ,EAAJI,KAE/CC,GAA0BC,EAAAA,EAAAA,UAAS,KAAIC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAhCI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,GAAkDL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA1DE,EAAiBD,EAAA,GAAEE,EAAoBF,EAAA,GAExCG,GAAWC,EAAAA,EAAAA,MAEXC,EAAmB,WACvBH,GAAqB,SAACI,GAAc,OAAMA,CAAc,GAC1D,GAEAC,EAAAA,EAAAA,YAAU,WACR,GAAKjB,EAAL,CAEA,IAAMkB,EAAWC,aAAY,kBAAMX,GAAS,SAACY,GAAG,OAAKA,EAAM,CAAC,GAAC,GAAE,KAM/D,OAJc,IAAVb,GACFc,cAAcH,GAGT,kBAAMG,cAAcH,EAAU,CARZ,CAS3B,GAAG,CAAClB,EAAcO,IAElB,IAIMe,EAAUC,KAAKC,MAAMjB,EAAQ,IAC7BkB,EAAUF,KAAKC,MAAMjB,EAAQ,IAEnC,OACEmB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAAAF,UACLC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,oBAGTC,EAAAA,EAAAA,KAACE,EAAAA,GAAS,CAAAH,UACRF,EAAAA,EAAAA,MAAA,WAAAE,SAAA,EACEF,EAAAA,EAAAA,MAAA,OAAKM,UAAWC,EAAoBL,SAAA,EAClCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,mBACJC,EAAAA,EAAAA,KAACK,EAAAA,GAAY,OAGdlC,IACC0B,EAAAA,EAAAA,MAAA,OAAKM,UAAWC,EAAmBL,SAAA,EACjCC,EAAAA,EAAAA,KAACM,EAAAA,GAAY,CACXC,KAAK,UACLC,QACE,wEAIFpC,GAAqC,IAAVM,IAC3BmB,EAAAA,EAAAA,MAAA,KAAGM,UAAWC,EAAmBL,SAAA,CAAC,0CACQN,EAAQ,QAAMG,EAAS,IAAI,aAKrExB,GAAqC,IAAVM,IAC3BmB,EAAAA,EAAAA,MAAA,OAAKM,UAAWC,EAAeL,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,UACEG,UAAWC,EACXG,KAAK,SACLE,QAzCI,WACpBzB,GAAS0B,EAAAA,EAAAA,IAAoB,CAAEC,MAAOtC,EAAKsC,QAC7C,EAuCyCZ,SACxB,oBAIDC,EAAAA,EAAAA,KAAA,UACEO,KAAK,SACLJ,UAAWC,EACXK,QAASvB,EAAiBa,UAE1BC,EAAAA,EAAAA,KAACY,EAAAA,GAAQ,CAACC,KAAM,UAKrB/B,IACCkB,EAAAA,EAAAA,KAACc,EAAAA,GAAU,CAACC,QAAS7B,EAAiBa,UACpCF,EAAAA,EAAAA,MAAA,OAAKM,UAAWC,EAAmBL,SAAA,EACjCC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,8EAIHF,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,6CAC0C,KAC3CC,EAAAA,EAAAA,KAAA,KACEgB,KAAK,8CACLC,OAAO,SACPC,IAAI,sBAAqBnB,SAC1B,cAEG,sBAY1B,C","sources":["webpack://react-phonebook/./src/pages/Register/Register.module.css?12fc","pages/Register/Register.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"main-wrapper\":\"Register_main-wrapper__nqEjZ\",\"verify-info\":\"Register_verify-info__lLiLt\",\"resend-text\":\"Register_resend-text__Nh2ZR\",\"btn-bar\":\"Register_btn-bar__P0gbb\",\"resend-btn\":\"Register_resend-btn__1ZutR\",\"info-btn\":\"Register_info-btn__RwUi7\",\"info-pop-up\":\"Register_info-pop-up__00PiA\"};","import { useAuth } from \"hooks\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { resendVerifyMessage } from \"redux/auth/operations\";\n\nimport { Container, FallbackView, ModalPopUp, RegisterForm } from \"components\";\nimport { Helmet } from \"react-helmet\";\nimport { InfoIcon } from \"helpers/icons\";\nimport css from \"./Register.module.css\";\n\nconst Register = () => {\n  const { isRegistered, isVerifyMessageResended, user } = useAuth();\n\n  const [timer, setTimer] = useState(300);\n  const [isModalPopUpShown, setIsModalPopUpShown] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const toggleModalPopUp = () => {\n    setIsModalPopUpShown((prevModalState) => !prevModalState);\n  };\n\n  useEffect(() => {\n    if (!isRegistered) return;\n\n    const interval = setInterval(() => setTimer((sec) => sec - 1), 1000);\n\n    if (timer === 0) {\n      clearInterval(interval);\n    }\n\n    return () => clearInterval(interval);\n  }, [isRegistered, timer]);\n\n  const resendHandler = () => {\n    dispatch(resendVerifyMessage({ email: user.email }));\n  };\n\n  const minutes = Math.floor(timer / 60);\n  const seconds = Math.floor(timer % 60);\n\n  return (\n    <>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n\n      <Container>\n        <section>\n          <div className={css[\"main-wrapper\"]}>\n            <h1>Register page</h1>\n            <RegisterForm />\n          </div>\n\n          {isRegistered && (\n            <div className={css[\"verify-info\"]}>\n              <FallbackView\n                type=\"warning\"\n                message={\n                  \"Please check out verification message on your email to continue...\"\n                }\n              />\n\n              {!isVerifyMessageResended && timer !== 0 && (\n                <p className={css[\"resend-text\"]}>\n                  You can resend verification message in {minutes} min {seconds}{\" \"}\n                  sec...\n                </p>\n              )}\n\n              {!isVerifyMessageResended && timer === 0 && (\n                <div className={css[\"btn-bar\"]}>\n                  <button\n                    className={css[\"resend-btn\"]}\n                    type=\"button\"\n                    onClick={resendHandler}\n                  >\n                    Resend message\n                  </button>\n\n                  <button\n                    type=\"button\"\n                    className={css[\"info-btn\"]}\n                    onClick={toggleModalPopUp}\n                  >\n                    <InfoIcon size={20} />\n                  </button>\n                </div>\n              )}\n\n              {isModalPopUpShown && (\n                <ModalPopUp onClose={toggleModalPopUp}>\n                  <div className={css[\"info-pop-up\"]}>\n                    <p>\n                      The number of messages sent per day is limited by a\n                      third-party service.\n                    </p>\n                    <p>\n                      If you have any issues, please contact the{\" \"}\n                      <a\n                        href=\"https://www.linkedin.com/in/oleh-panchenko/\"\n                        target=\"_blank\"\n                        rel=\"noreferrer noopener\"\n                      >\n                        developer\n                      </a>\n                      .\n                    </p>\n                  </div>\n                </ModalPopUp>\n              )}\n            </div>\n          )}\n        </section>\n      </Container>\n    </>\n  );\n};\n\nexport default Register;\n"],"names":["_useAuth","useAuth","isRegistered","isVerifyMessageResended","user","_useState","useState","_useState2","_slicedToArray","timer","setTimer","_useState3","_useState4","isModalPopUpShown","setIsModalPopUpShown","dispatch","useDispatch","toggleModalPopUp","prevModalState","useEffect","interval","setInterval","sec","clearInterval","minutes","Math","floor","seconds","_jsxs","_Fragment","children","_jsx","Helmet","Container","className","css","RegisterForm","FallbackView","type","message","onClick","resendVerifyMessage","email","InfoIcon","size","ModalPopUp","onClose","href","target","rel"],"sourceRoot":""}